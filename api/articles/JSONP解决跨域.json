{"title":"JSONP解决跨域问题","uid":"e0afe5470d30cea57d222ddde269ba0c","slug":"JSONP解决跨域","date":"2022-08-20T12:17:00.000Z","updated":"2022-10-05T06:50:24.466Z","comments":true,"path":"api/articles/JSONP解决跨域.json","keywords":null,"cover":"https://res.cloudinary.com/dg7crzfct/image/upload/v1664952605/%E6%96%87%E7%AB%A0%E7%B4%A0%E6%9D%90%E5%BA%93/JSONP%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/deepmind-OVzy5oIDPp8-unsplash_xqqxrb.jpg","content":"<p>JSONP是JSON with Padding的略称，JSONP为民间提出的一种跨域解决方案，通过客户端的script标签发出的请求方式。</p>\n<h1 id=\"什么时候才有跨域问题\"><a href=\"#什么时候才有跨域问题\" class=\"headerlink\" title=\"什么时候才有跨域问题?\"></a>什么时候才有跨域问题?</h1><p>浏览器的ajax，去请求不同的源的数据，就会出现跨域问题。</p>\n<p>问: img&#x2F;srcipt标签的src有跨域问题吗?</p>\n<p>答:没有</p>\n<p>所以可以利用这个解决跨域</p>\n<p><img src=\"https://res.cloudinary.com/dg7crzfct/image/upload/v1664952414/%E6%96%87%E7%AB%A0%E7%B4%A0%E6%9D%90%E5%BA%93/JSONP%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20221005144640_k1azav.jpg\" alt=\"图片\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!--index.html --&gt;\n&lt;body&gt;\n    &lt;button id&#x3D;&quot;btn&quot;&gt;发送ajax请求&lt;&#x2F;button&gt;\n    &lt;script&gt;\n        &#x2F;&#x2F; 这个例子不使用Ajax请求，而是使用script标签，向服务器发送请求\n        &#x2F;&#x2F; 然后在客户端得到对应的数据\n\n        let btn &#x3D; document.querySelector(&#39;#btn&#39;);\n\n        function jsonp(options) &#123;\n            &#x2F;&#x2F; 定义一个回调函数\n            let callBackName &#x3D; &#39;wangcai&#39;;\n            &#x2F;&#x2F; 回调函数负责返回数据或者错误\n            window[callBackName] &#x3D; function (data) &#123;\n                if (data !&#x3D; null) &#123;\n                    options.success(data);\n                &#125; else &#123;\n                    options.fail();\n                &#125;\n            &#125;\n\n            let url &#x3D; options[&#39;url&#39;] + &#39;?callBack&#x3D;&#39; + callBackName;\n\n            let scriptEle &#x3D; document.createElement(&#39;script&#39;);\n            scriptEle.src &#x3D; url;\n            document.body.append(scriptEle);\n        &#125;\n\n        btn.onclick &#x3D; function () &#123;\n            jsonp(&#123;\n                url: &#39;http:&#x2F;&#x2F;localhost:3000&#x2F;&#39;,\n                success: function (data) &#123;\n                    console.log(&quot;data&quot;, data);\n                &#125;,\n                fail: function (err) &#123;\n                    console.log(&quot;数据请求失败&quot;);\n                &#125;\n            &#125;)\n        &#125;\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>服务端的代码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; service.js\n\nlet express &#x3D; require(&#39;express&#39;);\n\nlet app &#x3D; express();\n\n&#x2F;&#x2F; 解决跨域问题\n&#x2F;&#x2F; app.all(&#39;*&#39;, function (req, res, next) &#123;\n&#x2F;&#x2F;     &#x2F;&#x2F; 设置允许跨域的域名,*代表允许任意域名跨域\n&#x2F;&#x2F;     res.header(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;);\n&#x2F;&#x2F;     &#x2F;&#x2F; 允许的header类型\n&#x2F;&#x2F;     res.header(&#39;Access-Control-Allow-Headers&#39;, &#39;content-type&#39;);\n&#x2F;&#x2F;     &#x2F;&#x2F; 跨域允许的请求方式\n&#x2F;&#x2F;     res.header(&#39;Access-Control-Allow-Methods&#39;, &#39;DELETE,PUT,POST,GET,OPTIONS&#39;);\n&#x2F;&#x2F;     if (req.method.toLowerCase() &#x3D;&#x3D; &#39;options&#39;) res.send(200); &#x2F;&#x2F; 让options 尝试请求快速结束\n&#x2F;&#x2F;     else next();\n&#x2F;&#x2F; &#125;);\n\n&#x2F;&#x2F; 改了服务器代码一定要重启服务器\n&#x2F;&#x2F; req是请求，res是响应\napp.get(&#39;&#x2F;&#39;, (req, res) &#x3D;&gt; &#123;\n    &#x2F;&#x2F; 当访问&#x2F; 时，响应json数据\n    &#x2F;&#x2F; res.json(&#123;\n    &#x2F;&#x2F;  name: &#39;wc&#39;,\n    &#x2F;&#x2F;  age: 18,\n    &#x2F;&#x2F; &#125;);\n\n    &#x2F;&#x2F; 响应字符串\n    &#x2F;&#x2F; res.send(&#39;hello express&#39;);\n\n    &#x2F;&#x2F; 响应一个函数调用的字符串\n    res.send(&#96;$&#123;req.query.callBack&#125;(\n        $&#123;JSON.stringify(&#123; name: &#39;z3&#39;, age: 128 &#125;)&#125;\n    )&#96;);\n&#125;);\n\n&#x2F;&#x2F; IP 127.0.0.1\n&#x2F;&#x2F; 域名  localhost\n&#x2F;&#x2F; 端口 3000\napp.listen(3000, () &#x3D;&gt; &#123;\n    console.log(&#39;server is running on 3000&#39;);\n&#125;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"JSONP和AJAX请求的异同\"><a href=\"#JSONP和AJAX请求的异同\" class=\"headerlink\" title=\"JSONP和AJAX请求的异同\"></a><strong>JSONP和AJAX请求的异同</strong></h1><h2 id=\"相同点：\"><a href=\"#相同点：\" class=\"headerlink\" title=\"相同点：\"></a>相同点：</h2><ul>\n<li>使用的目的一致，都是客户端向服务端请求数据，将数据拿回客户端进行处理。</li>\n</ul>\n<h2 id=\"不同点：\"><a href=\"#不同点：\" class=\"headerlink\" title=\"不同点：\"></a>不同点：</h2><ul>\n<li>ajax请求是一种官方推出的请求方式，通过xhr对象去实现，jsonp是民间发明，script标签实现的请求。</li>\n<li>ajax是一个异步请求，jsonp是一个同步请求</li>\n<li>ajax存在同源检查，jsonp不存在同源检查，后端无需做解决跨域的响应头。</li>\n<li>ajax支持各种请求的方式，而jsonp只支持get请求</li>\n<li>ajax的使用更加简便，而jsonp的使用较为麻烦。</li>\n</ul>\n","text":"JSONP是JSON with Padding的略称，JSONP为民间提出的一种跨域解决方案，通过客户端的script标签发出的请求方式。 什么时候才有跨域问题?浏览器的ajax，去请求不同的源的数据，就会出现跨域问题。 问: img&#x2F;srcipt标签的src有跨域问题...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":2,"path":"api/categories/前端.json"}],"tags":[{"name":"网络请求","slug":"网络请求","count":1,"path":"api/tags/网络请求.json"},{"name":"JSONP","slug":"JSONP","count":1,"path":"api/tags/JSONP.json"},{"name":"Javascript","slug":"Javascript","count":1,"path":"api/tags/Javascript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E6%89%8D%E6%9C%89%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">什么时候才有跨域问题?</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JSONP%E5%92%8CAJAX%E8%AF%B7%E6%B1%82%E7%9A%84%E5%BC%82%E5%90%8C\"><span class=\"toc-text\">JSONP和AJAX请求的异同</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%90%8C%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">相同点：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%90%8C%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">不同点：</span></a></li></ol></li></ol>","author":{"name":"风离","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"略懂数据挖掘、NLP和推荐算法的前炼丹师，目前沉迷JS、React的前端硕狗。 <br /> @ <b>公众号：丹星X</b>","socials":{"github":"https://github.com/leek-emperor","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/ma-xing-yu-71","csdn":"https://blog.csdn.net/weixin_44008395?type=blog","juejin":"https://juejin.cn/user/1042800253352664","customs":{}}},"mapped":true,"prev_post":{"title":"字节跳动2022年9月模拟笔试（上）","uid":"8ff685f8218119a3e3b228fe1d1d8ae5","slug":"字节跳动九月模拟笔试（下）","date":"2022-09-08T13:57:00.000Z","updated":"2022-10-05T14:18:20.634Z","comments":true,"path":"api/articles/字节跳动九月模拟笔试（下）.json","keywords":null,"cover":"https://res.cloudinary.com/dg7crzfct/image/upload/v1664951146/%E6%96%87%E7%AB%A0%E7%B4%A0%E6%9D%90%E5%BA%93/shahadat-rahman-gnyA8vd3Otc-unsplash_sufut6.jpg","text":"第三题：数组游戏 双休在家的凯凯真的是太无聊了，他准备和他家的猫玩一个游戏。 凯凯在小黑板上写下一串有正有负的数列，猫咪从左到右，每碰到一个数，可以选择选取或者不选取。 在选取过程中，要保证所有选取的数的和始终为非负。在这个限制条件下求最多可以选取多少个数。 小猫咪表示“我太难了...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":4,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"二叉树","slug":"二叉树","count":2,"path":"api/tags/二叉树.json"},{"name":"优先队列","slug":"优先队列","count":3,"path":"api/tags/优先队列.json"},{"name":"字节跳动","slug":"字节跳动","count":2,"path":"api/tags/字节跳动.json"}],"author":{"name":"风离","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"略懂数据挖掘、NLP和推荐算法的前炼丹师，目前沉迷JS、React的前端硕狗。 <br /> @ <b>公众号：丹星X</b>","socials":{"github":"https://github.com/leek-emperor","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/ma-xing-yu-71","csdn":"https://blog.csdn.net/weixin_44008395?type=blog","juejin":"https://juejin.cn/user/1042800253352664","customs":{}}}},"next_post":{"title":"数据竞赛实战（一）点击反欺诈预测，2022年3月第二名","uid":"ecfdc9266c75f1a5dbb47c4430fd00a9","slug":"数据竞赛实战（一）点击反欺诈预测，2022年3月第二名","date":"2022-06-18T02:40:00.000Z","updated":"2022-10-05T14:17:46.190Z","comments":true,"path":"api/articles/数据竞赛实战（一）点击反欺诈预测，2022年3月第二名.json","keywords":null,"cover":"https://res.cloudinary.com/dg7crzfct/image/upload/v1664978472/%E6%96%87%E7%AB%A0%E7%B4%A0%E6%9D%90%E5%BA%93/NLP%E7%9B%B8%E5%85%B3/alex-sh-H6Kl0yCnCwc-unsplash_nubtec.jpg","text":"大家好，这里是丹星，今天的项目是我之前比赛的代码啦，这个分数还是比较靠前的，总排名应该能有前20吧，代码我4月份其实已经开源在AI Studio了（https://aistudio.baidu.com/aistudio/projectdetail/3735300）。 比赛介绍广告...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"数据挖掘","slug":"数据挖掘","count":1,"path":"api/categories/数据挖掘.json"}],"tags":[{"name":"数据竞赛","slug":"数据竞赛","count":1,"path":"api/tags/数据竞赛.json"},{"name":"xgboost","slug":"xgboost","count":1,"path":"api/tags/xgboost.json"},{"name":"lightGBM","slug":"lightGBM","count":1,"path":"api/tags/lightGBM.json"}],"author":{"name":"风离","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"略懂数据挖掘、NLP和推荐算法的前炼丹师，目前沉迷JS、React的前端硕狗。 <br /> @ <b>公众号：丹星X</b>","socials":{"github":"https://github.com/leek-emperor","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/ma-xing-yu-71","csdn":"https://blog.csdn.net/weixin_44008395?type=blog","juejin":"https://juejin.cn/user/1042800253352664","customs":{}}}}}